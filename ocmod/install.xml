<?xml version="1.0" encoding="utf-8"?>
<modification>
  <name>qmenu Admin Header Menu</name>
  <code>qmenu_admin_header</code>
  <version>1.0.0</version>
  <author>QO3 Automation</author>
  <link>https://qo3.local</link>

  <file path="admin/view/template/common/header.twig">
    <operation>
      <search><![CDATA[<ul class="nav navbar-nav navbar-right">]]></search>
      <add position="replace"><![CDATA[<ul class="nav navbar-nav navbar-right">
      {% if qmenu_enabled is defined and qmenu_enabled %}
      <li class="dropdown qmenu-dropdown">
        <a id="qmenuDropdown" class="dropdown-toggle" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">{{ qmenu_label|default(qmenu_default_label|default('qmenu')) }} <i class="fa fa-caret-down"></i></a>
        <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="qmenuDropdown">
          {% if qmenu_items is defined and qmenu_items %}
            {% for item in qmenu_items %}
          <li><a href="{{ item.href|default('#') }}"{% if item.target %} target="_blank"{% endif %}>{{ item.label|default(item.href|default(item.route|default(qmenu_default_label|default('qmenu')))) }}</a></li>
            {% endfor %}
          {% else %}
          <li class="disabled"><a href="#" tabindex="-1">{{ qmenu_empty_text|default(qmenu_default_label|default('qmenu')) }}</a></li>
          {% endif %}
          <li role="separator" class="divider"></li>
          <li><a href="{{ qmenu_manage_href|default('#') }}">{{ qmenu_manage_text|default(qmenu_default_label|default('qmenu')) }}</a></li>
        </ul>
      </li>
      {% endif %}
]]></add>
    </operation>
  </file>

  <file path="admin/controller/common/header.php">
    <operation>
      <search><![CDATA[$data['stores'] = array();]]></search>
      <add position="before"><![CDATA[
    $this->load->language('extension/module/qmenu');

    $language_id = (int) $this->config->get('config_language_id');
    $default_label = $this->language->get('text_default_label');

    if ($default_label === 'text_default_label' || $default_label === '') {
        $default_label = 'qmenu';
    }

    $empty_text = $this->language->get('text_empty_menu');

    if ($empty_text === 'text_empty_menu' || $empty_text === '') {
        $empty_text = $default_label;
    }

    $data['qmenu_manage_href'] = $this->url->link('extension/module/qmenu', 'user_token=' . $this->session->data['user_token'], true);
    $manage_text = $this->language->get('text_manage_qmenu');

    if ($manage_text === 'text_manage_qmenu' || $manage_text === '') {
        $manage_text = $default_label;
    }

    $data['qmenu_manage_text'] = $manage_text;

    $data['qmenu_enabled'] = (bool) $this->config->get('module_qmenu_status');
    $data['qmenu_items'] = [];
    $data['qmenu_default_label'] = $default_label;
    $data['qmenu_empty_text'] = $empty_text;

    if ($data['qmenu_enabled']) {
        $label_setting = $this->config->get('module_qmenu_label');

        if (is_string($label_setting) && $label_setting !== '') {
            $decoded_label = json_decode($label_setting, true);
            $label_setting = is_array($decoded_label) ? $decoded_label : [$language_id => $label_setting];
        } elseif (!is_array($label_setting)) {
            $label_setting = [];
        }

        $current_label = isset($label_setting[$language_id]) ? trim((string) $label_setting[$language_id]) : '';

        if ($current_label === '') {
            foreach ($label_setting as $value) {
                if (is_string($value) && trim($value) !== '') {
                    $current_label = trim($value);
                    break;
                }
            }
        }

        $data['qmenu_label'] = $current_label !== '' ? $current_label : $default_label;

        $items_setting = $this->config->get('module_qmenu_items');

        if (is_string($items_setting) && $items_setting !== '') {
            $items_setting = json_decode($items_setting, true);
        }

        if (!is_array($items_setting)) {
            $items_setting = [];
        }

        foreach ($items_setting as $qmenu_item) {
            if (!is_array($qmenu_item)) {
                continue;
            }

            $labels = [];

            if (isset($qmenu_item['label'])) {
                if (is_string($qmenu_item['label'])) {
                    $decoded_item_label = json_decode($qmenu_item['label'], true);
                    $labels = is_array($decoded_item_label) ? $decoded_item_label : [];
                } elseif (is_array($qmenu_item['label'])) {
                    $labels = $qmenu_item['label'];
                }
            }

            $item_label = isset($labels[$language_id]) ? trim((string) $labels[$language_id]) : '';

            if ($item_label === '') {
                foreach ($labels as $value) {
                    if (is_string($value) && trim($value) !== '') {
                        $item_label = trim($value);
                        break;
                    }
                }
            }

            if ($item_label === '') {
                continue;
            }

            $type = isset($qmenu_item['type']) && $qmenu_item['type'] === 'route' ? 'route' : 'link';
            $href = '';

            if ($type === 'route' && !empty($qmenu_item['route'])) {
                $href = $this->url->link($qmenu_item['route'], 'user_token=' . $this->session->data['user_token'], true);
            } elseif (!empty($qmenu_item['href'])) {
                $href = $qmenu_item['href'];
            }

            if ($href === '') {
                continue;
            }

            $data['qmenu_items'][] = [
                'label'  => $item_label,
                'href'   => $href,
                'target' => !empty($qmenu_item['new_tab'])
            ];
        }

        if (!$data['qmenu_items']) {
            $data['qmenu_label'] = $data['qmenu_label'] ?? $default_label;
        }
    } else {
        $data['qmenu_label'] = $default_label;
    }
]]></add>
    </operation>
  </file>

  <file path="admin/view/stylesheet/stylesheet.css">
    <operation>
      <search regex="true"><![CDATA[~$~]]></search>
      <add position="before"><![CDATA[
/* qmenu admin dropdown */
.qmenu-dropdown > a {
  font-weight: 600;
  letter-spacing: 0.04em;
}

.qmenu-dropdown .dropdown-menu {
  min-width: 12rem;
}

.qmenu-dropdown .dropdown-menu > li > a {
  padding: 8px 20px;
}

.qmenu-dropdown .dropdown-menu > li.disabled > a {
  color: #999;
  pointer-events: none;
}

]]></add>
    </operation>
  </file>
</modification>
